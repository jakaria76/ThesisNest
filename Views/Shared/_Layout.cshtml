@using Microsoft.AspNetCore.Identity
@using ThesisNest.Models
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    var title = (string)(ViewData["Title"] ?? "ThesisNest");
    var currentPath = Context?.Request?.Path.Value?.ToLowerInvariant() ?? "";
}
<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@title - ThesisNest</title>

    <!-- CSS -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/theme.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ThesisNest.styles.css" asp-append-version="true" />

    <!-- SweetAlert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    @RenderSection("Styles", required: false)

    <!-- Prevent FOUC: set saved theme before first paint -->
    <script>
      (function () {
        try {
          var saved = localStorage.getItem('tn-theme');
          if (!saved) {
            saved = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
          }
          document.documentElement.setAttribute('data-theme', saved);
        } catch (e) { }
      })();
    </script>

   
    <script type="module"
            src="https://unpkg.com/emoji-picker-element%401.21.1/index.js?module">
    </script>

    <style>
        .theme-toggle-btn{border:none;background:none;font-size:1.2rem;cursor:pointer;color:var(--text);padding:0}
        .tn-brand{display:flex;align-items:flex-start;padding-top:0;padding-bottom:2rem}
        .tn-logo{display:inline-flex;align-items:center;text-decoration:none;line-height:1}
        .tn-logo img{height:70px;width:auto;object-fit:contain;display:block}
        .tn-nav{margin-left:0;padding-left:0}
        @@media (max-width: 992px){ .tn-logo img{height:36px} }
    </style>
</head>

<body class="tn-app" data-userid="@UserManager.GetUserId(User)">
  <div class="tn-layout">
    @if (SignInManager.IsSignedIn(User))
    {
      <!-- Sidebar -->
      <aside id="tnSidebar" class="tn-sidebar">
        <div class="tn-brand px-3 py-3">
          <a href="@Url.Action("Index", "Home")" class="tn-logo" aria-label="ThesisNest Home">
            <img src="~/images/logo1.png" alt="ThesisNest" />
          </a>
          <button class="btn btn-sm btn-outline-secondary ms-auto d-none d-lg-inline-flex"
                  id="tnCollapseBtn" title="Collapse sidebar" type="button" aria-label="Collapse sidebar">
            <i class="bi bi-layout-sidebar-inset"></i>
          </button>
        </div>

        <nav class="tn-nav">
          <div class="tn-section">Pages</div>

          <a class="tn-link @(currentPath.Contains("/home/index") ? "active" : "")"
             asp-controller="Home" asp-action="Index" title="Home" data-bs-toggle="tooltip">
            <i class="bi bi-house"></i><span>Home</span>
          </a>

          @{
              var currentUser = await UserManager.GetUserAsync(User);
              var roles = currentUser != null ? await UserManager.GetRolesAsync(currentUser) : new List<string>();
              bool isAdmin = roles.Contains("Admin");
              bool isTeacher = roles.Contains("Teacher");
              bool isStudent = roles.Contains("Student");
          }

          <div class="tn-section">Profile</div>

          @if (isTeacher || isAdmin)
          {
              <a class="tn-link @(currentPath.Contains("/teacherprofile") ? "active" : "")"
                 asp-controller="TeacherProfile" asp-action="Index" title="Teacher Profile" data-bs-toggle="tooltip">
                  <i class="bi bi-mortarboard"></i><span>Teacher Profile</span>
              </a>
              <a class="tn-link @(currentPath.Contains("/thesisreview") ? "active" : "")"
                 asp-controller="ThesisReview" asp-action="Index" title="Review Thesis" data-bs-toggle="tooltip">
                  <i class="bi bi-search"></i><span>Review Thesis</span>
              </a>
          }

           @if (isAdmin)
            {
                <div class="tn-section mt-3">Admin</div>

                        <a class="tn-link @(currentPath.Contains("/adminteacher") ? "active" : "")"
                           asp-controller="AdminTeacher" asp-action="Index" title="Teacher Management" data-bs-toggle="tooltip">
                            <i class="bi bi-people"></i><span>Teacher Management</span>
                        </a>

                        <a class="tn-link @(currentPath.Contains("/adminstudent") ? "active" : "")"
                           asp-controller="AdminStudent" asp-action="Index" title="Student Management" data-bs-toggle="tooltip">
                            <i class="bi bi-person-badge"></i><span>Student Management</span>
                        </a>
             }

                    @if (isAdmin)
                    {
                        <div class="tn-section mt-3">Admin</div>

                        <a class="tn-link @(currentPath.Contains("/adminproposal") ? "active" : "")"
                           asp-controller="AdminProposal" asp-action="Index" title="Proposal Manage" data-bs-toggle="tooltip">
                            <i class="bi bi-file-earmark-text"></i><span>Proposal Manage</span>
                        </a>

                       
                    }


}



          @if (isTeacher)
          {
              <a class="tn-link @(currentPath.Contains("/plagiarism") ? "active" : "")"
                 asp-controller="Plagiarism" asp-action="Index" title="Plagiarism Checker" data-bs-toggle="tooltip">
                  <i class="bi bi-files"></i><span>Plagiarism Checker</span>
              </a>
          }

          @if (isStudent && !(isTeacher || isAdmin))
          {
              <a class="tn-link @(currentPath.Contains("/studentprofile") ? "active" : "")"
                 asp-controller="StudentProfile" asp-action="Index" title="Student Profile" data-bs-toggle="tooltip">
                  <i class="bi bi-person-circle"></i><span>Student Profile</span>
              </a>
          }

          @if (isTeacher || isAdmin)
          {
              <a class="tn-link @(currentPath.Contains("/home/privacy") ? "active" : "")"
                 asp-controller="Home" asp-action="Privacy" title="Privacy" data-bs-toggle="tooltip">
                  <i class="bi bi-shield-check"></i><span>Privacy</span>
              </a>
          }

          @if (isStudent && !(isTeacher || isAdmin))
          {
              <div class="tn-section mt-3">Thesis</div>

              <a class="tn-link @(currentPath.Contains("/studentthesis/create") ? "active" : "")"
                 asp-controller="StudentThesis" asp-action="Create" title="Upload Proposal" data-bs-toggle="tooltip">
                  <i class="bi bi-cloud-upload"></i><span>Upload Proposal</span>
              </a>

              <a class="tn-link @(currentPath.Contains("/studentthesis/index") ? "active" : "")"
                 asp-controller="StudentThesis" asp-action="Index" title="My Submissions" data-bs-toggle="tooltip">
                  <i class="bi bi-journal-text"></i><span>My Submissions</span>
              </a>

              <a class="tn-link @(currentPath.Contains("/notification/my") ? "active" : "")"
                 asp-controller="Notification" asp-action="My" title="Notifications" data-bs-toggle="tooltip">
                  <i class="bi bi-bell"></i><span>Notifications</span>
                  <span id="navNotifCount" class="badge bg-danger ms-auto d-none">0</span>
              </a>

              <a class="tn-link @(currentPath.Contains("/resources/guidelines") ? "active" : "")"
                 asp-controller="Resources" asp-action="Guidelines" title="Guidelines & Template" data-bs-toggle="tooltip">
                  <i class="bi bi-file-earmark-text"></i><span>Guidelines & Template</span>
              </a>
          }
        </nav>

        <div class="mt-auto p-3 tn-logout">
          <button type="button" class="btn btn-danger w-100" id="logoutBtn" title="Logout" data-bs-toggle="tooltip">
            <i class="bi bi-box-arrow-right me-2"></i> <span class="logout-text">Logout</span>
          </button>
          <form id="logoutForm" asp-controller="Account" asp-action="Logout" method="post" class="d-none">
            @Html.AntiForgeryToken()
          </form>
        </div>
      </aside>
    }

    <!-- Content -->
    <div class="tn-content">
      <header class="tn-topbar d-flex align-items-center">
        @if (SignInManager.IsSignedIn(User))
        {
          <button class="btn btn-outline-secondary d-inline-flex d-lg-none me-2"
                  id="tnMobileToggle" type="button" aria-label="Open sidebar">
            <i class="bi bi-list"></i>
          </button>
        }

        <h1 class="h5 m-0 flex-grow-1">@title</h1>

        <div class="d-flex align-items-center">
          <button id="themeToggleBtn" class="btn btn-outline-secondary me-3" title="Toggle Theme" aria-label="Toggle Theme">
            <i id="themeIcon" class="bi"></i>
          </button>

          <div class="ms-auto d-flex align-items-center gap-3">
            @if (User.Identity?.IsAuthenticated ?? false)
            {
                if (User.IsInRole("Teacher"))
                {
                    @await Component.InvokeAsync("CommSummary")
                }
            }
            <partial name="_LoginPartial" />
          </div>
        </div>
      </header>

      <main role="main" class="tn-main">
        <div class="container-xxl">
          @RenderBody()
        </div>
      </main>

      <footer class="tn-footer text-muted text-center py-3">
        &copy; @DateTime.UtcNow.Year - ThesisNest
      </footer>
    </div>
  </div>

  <!-- Scripts: single set, correct order -->
  <script src="~/lib/jquery/dist/jquery.min.js"></script>
  <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

  <!-- SignalR: CDN first (Razor-safe %40), fallback to local -->
  <script src="https://unpkg.com/%40microsoft/signalr@8.0.5/dist/browser/signalr.min.js"
          asp-fallback-src="~/lib/signalr/signalr.min.js"
          asp-fallback-test="window.signalR"></script>

  <!-- Your WebRTC + SignalR helper (must be after SignalR) -->
  <script src="~/js/comm.js" asp-append-version="true"></script>

  @await RenderSectionAsync("Scripts", required: false)

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const html = document.documentElement;
      const sidebar = document.getElementById('tnSidebar');
      const collapseBtn = document.getElementById('tnCollapseBtn');
      const mobileBtn = document.getElementById('tnMobileToggle');
      const themeToggle = document.getElementById('themeToggleBtn');
      const themeIcon = document.getElementById('themeIcon');
      const logoutBtn = document.getElementById('logoutBtn');
      const logoutForm = document.getElementById('logoutForm');

      // Theme
      function setTheme(theme) {
        html.setAttribute('data-theme', theme);
        themeIcon.classList.remove('bi-moon', 'bi-sun');
        themeIcon.classList.add(theme === 'dark' ? 'bi-sun' : 'bi-moon');
        try { localStorage.setItem('tn-theme', theme); } catch (e) { }
      }
      let savedTheme = null;
      try { savedTheme = localStorage.getItem('tn-theme'); } catch (e) { }
      if (!savedTheme) savedTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      setTheme(savedTheme);

      themeToggle?.addEventListener('click', () => {
        const newTheme = html.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
        setTheme(newTheme);
      });

      // Sidebar (desktop)
      collapseBtn?.addEventListener('click', () => {
        sidebar?.classList.toggle('is-collapsed');
        try {
          localStorage.setItem('tn-sb-collapsed', sidebar?.classList.contains('is-collapsed') ? '1' : '0');
        } catch (e) { }
      });
      try {
        if (localStorage.getItem('tn-sb-collapsed') === '1' && !window.matchMedia('(max-width: 992px)').matches) {
          sidebar?.classList.add('is-collapsed');
        }
      } catch (e) { }

      // Sidebar (mobile)
      mobileBtn?.addEventListener('click', () => {
        sidebar?.classList.toggle('show');
        const isOpen = sidebar?.classList.contains('show');
        document.body.style.overflow = isOpen ? 'hidden' : '';
        document.body.classList.toggle('sidebar-open', isOpen);
      });
      document.addEventListener('click', (e) => {
        if (!window.matchMedia('(max-width: 992px)').matches) return;
        if (!sidebar || !mobileBtn) return;
        const inside = sidebar.contains(e.target) || mobileBtn.contains(e.target);
        if (!inside) {
          sidebar.classList.remove('show');
          document.body.style.overflow = '';
          document.body.classList.remove('sidebar-open');
        }
      });

      // Logout confirm
      logoutBtn?.addEventListener('click', (e) => {
        e.preventDefault();
        Swal.fire({
          title: 'Are you sure?',
          text: 'You will be logged out from ThesisNest.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#d33',
          cancelButtonColor: '#3085d6',
          confirmButtonText: 'Yes, Logout',
          cancelButtonText: 'Cancel'
        }).then((result) => {
          if (result.isConfirmed) logoutForm.submit();
        });
      });

      // Tooltips
      const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      tooltipTriggerList.forEach(function (el) {
        new bootstrap.Tooltip(el, { boundary: 'window' });
      });
    });
  </script>
</body>
</html>
